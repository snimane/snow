<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>incident</collection>
        <condition>current.parent_incident.changes() &amp;&amp; !current.parent_incident.nil()</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Derive State value from Parent Incident</name>
        <order>90</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	var ON_HOLD_REASON_AWAITING_CALLER = 1;

	// If child incident is already Closed or Cancelled, child incident should not get re-opened
	if (current.incident_state == IncidentState.CLOSED || current.incident_state == IncidentState.CANCELED)
		return;

	// If parent incident is already Closed or Cancelled, child incident state should not get derived from parent incident
	if (current.parent_incident.incident_state == IncidentState.CLOSED || current.parent_incident.incident_state == IncidentState.CANCELED)
		return;
	
	// If parent incident was re-opened by ESS user, child incident should not get re-opened from a resolved state
	var lastReopenedBy = gs.getUser().getUserByID(current.parent_incident.reopened_by);
	if (!lastReopenedBy.hasRole("itil,sn_incident_write"))
		if (current.incident_state == IncidentState.RESOLVED)
			return;

	// Add a message if child incidents state is being updated to resolved, due to parent incident being resolved
	// Update child incident's close code and close notes to match that of parent incident
	if (current.state != IncidentState.RESOLVED && current.parent_incident.state == IncidentState.RESOLVED) {
		var msg = "";
				
		if (current.isValidField("close_notes") && current.close_notes.nil()) {
			msg = gs.getMessage('{0} copied from Parent Incident', current.close_notes.getLabel());
			if (current.parent_incident.close_notes.toString().indexOf(msg) == 0)
				current.close_notes = current.parent_incident.close_notes;
			else
				current.close_notes = msg + ": " + current.parent_incident.close_notes;
		}
		if(current.isValidField("close_code"))
			current.close_code = current.parent_incident.close_code;

		msg = gs.getMessage("Resolved based on resolution of Parent Incident.");
		if (current.parent_incident.comments.toString().indexOf(msg) == 0)
			current.comments = current.parent_incident.comments;
		else
			current.comments = msg + " " + current.parent_incident.comments;
	}
	else {
		// States other than Resolved should not get synced up if "com.snc.best_practice.incident.kingston" is not active
		// So that customers upgrading from prior to Kingston, do not see a change in behavior
		if (!pm.isActive("com.snc.best_practice.incident.kingston"))
			return;
		
		// If parent_incident is on hold due to AWAITING_CALLER, then child incident state should not get updated
		if ( current.parent_incident.incident_state == IncidentState.ON_HOLD && current.parent_incident.hold_reason == ON_HOLD_REASON_AWAITING_CALLER)
			return;
	}

	// Update child incident's Incident State, State and On Hold Reason fields to match that of parent incident
	current.incident_state = current.parent_incident.incident_state;
	current.state = current.parent_incident.state;
	current.hold_reason = current.parent_incident.hold_reason;

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-05-29 09:00:03</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path/>
        <sys_id>c778e740b7713300f9519c75de11a99f</sys_id>
        <sys_mod_count>13</sys_mod_count>
        <sys_name>Derive State value from Parent Incident</sys_name>
        <sys_overrides/>
        <sys_package display_value="Upgrade content for 2011 - activated only for new instances" source="upgrade.2011_common_practice">1c6d45867146101091f9db5cf8a37216</sys_package>
        <sys_policy/>
        <sys_scope display_value="incident">bd536e1fdb7710109a312bfa4b9619f1</sys_scope>
        <sys_update_name>sys_script_c778e740b7713300f9519c75de11a99f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-10-17 07:25:31</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=c778e740b7713300f9519c75de11a99f"/>
    <sys_claim action="INSERT_OR_UPDATE">
        <claim_owner_scope display_value="incident">bd536e1fdb7710109a312bfa4b9619f1</claim_owner_scope>
        <claim_timestamp>175357305090000001</claim_timestamp>
        <metadata_update_name>sys_script_c778e740b7713300f9519c75de11a99f</metadata_update_name>
        <previous_claim_app_version>1.0.0</previous_claim_app_version>
        <previous_claim_name>incident</previous_claim_name>
        <previous_claim_scope>bd536e1fdb7710109a312bfa4b9619f1</previous_claim_scope>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-10-17 07:25:31</sys_created_on>
        <sys_id>b9d4269fdb7710109a312bfa4b96195d</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-10-17 07:25:31</sys_updated_on>
    </sys_claim>
    <sys_claim action="INSERT_OR_UPDATE">
        <claim_owner_scope display_value="incident">bd536e1fdb7710109a312bfa4b9619f1</claim_owner_scope>
        <claim_timestamp>175357304fd0000001</claim_timestamp>
        <metadata_update_name>sys_script_c778e740b7713300f9519c75de11a99f</metadata_update_name>
        <previous_claim_app_version>1.0.0</previous_claim_app_version>
        <previous_claim_name>upgrade.2011_common_practice</previous_claim_name>
        <previous_claim_scope>upgrade.2011_common_practice</previous_claim_scope>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-10-17 07:25:31</sys_created_on>
        <sys_id>7dd4269fdb7710109a312bfa4b96195d</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-10-17 07:25:31</sys_updated_on>
    </sys_claim>
</record_update>
